{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { FormsModule, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  //Get Existing data from local Storage\n  dataBase: any = localStorage.getItem('Records');\n  parsed: any = JSON.parse(this.dataBase);\n  index: number = 0;\n  currentRecord: any = this.parsed;\n  // Blood group Options\n  public options: string[] = ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'];\n  selected = 'A+';\n  selectedQuantity = '10';\n  ProfileData: any = {};\n  addData(form: NgForm) {\n    this.ProfileData = form.value;\n    var found = false;\n    for (var i = 0; i < this.currentRecord.length; i++) {\n      if (this.currentRecord[i].contact == form.value.contact) found = true;\n    }\n    if (!found) this.currentRecord.push(this.ProfileData);\n    localStorage.setItem('Records', JSON.stringify(this.currentRecord));\n  }\n  title = 'CUBE Blood Bank';\n}\n","<body>\n  <h1 class=\"text-danger text-center\">CUBE Blood Bank</h1>\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <button\n        type=\"button\"\n        class=\"btn btn-primary\"\n        data-toggle=\"modal\"\n        data-target=\"#modal\"\n      >\n        Add your Profile\n      </button>\n      <!--Modal Open-->\n    </div>\n    <!--Modal Pop UP show and Hide Code-->\n    <div id=\"modal\" class=\"modal fade\" role=\"dialog\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h4 class=\"modal-title text-danger\">Add your Profile</h4>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n              &times;\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <form #f=\"ngForm\" (ngSubmit)=\"addData(f)\">\n              <div id=\"userdata\">\n                <div class=\"form-group\">\n                  <div>\n                    <div class=\"row mt-3\">\n                      <label class=\"col-4\" for=\"username\">Name</label>\n\n                      <div class=\"col-8\">\n                        <input\n                          class=\"col-6\"\n                          ngModel\n                          name=\"username\"\n                          #username=\"ngModel\"\n                          type=\"text\"\n                          id=\"username\"\n                          class=\"form-control\"\n                          required\n                          pattern=\"[a-zA-Z]+[ ]*[a-zA-Z]*\"\n                        />\n                        <div\n                          *ngIf=\"username.invalid && username.touched\"\n                          class=\"text-danger\"\n                        >\n                          <small>* Name Can't be Empty</small>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <!--Email-->\n                  <div class=\"row mt-3\">\n                    <label class=\"col-4\" for=\"email\">Email</label>\n\n                    <div class=\"col-8\">\n                      <input\n                        ngModel\n                        email\n                        name=\"email\"\n                        type=\"text\"\n                        id=\"email\"\n                        #email=\"ngModel\"\n                        class=\"form-control\"\n                        required\n                      />\n                      <div\n                        class=\"text-danger\"\n                        *ngIf=\"email.touched && email.invalid\"\n                      >\n                        <small>* Please enter a valid email</small>\n                      </div>\n                    </div>\n                  </div>\n                  <!--Blood Group-->\n                  <div class=\"row mt-3\">\n                    <label class=\"col-4\" for=\"bg\">City</label>\n\n                    <div class=\"col-8\">\n                      <input\n                        ngModel\n                        name=\"city\"\n                        type=\"text\"\n                        id=\"city\"\n                        #city=\"ngModel\"\n                        class=\"form-control\"\n                        required\n                      />\n                      <div\n                        class=\"text-danger\"\n                        *ngIf=\"city.touched && city.invalid\"\n                      >\n                        <small>* City name is required </small>\n                      </div>\n                    </div>\n                  </div>\n                  <!--Phone Number-->\n                  <div class=\"row mt-3\">\n                    <label class=\"col-4\" for=\"contact\">Contact</label>\n                    <div class=\"col-8\">\n                      <input\n                        ngModel\n                        name=\"contact\"\n                        id=\"contact\"\n                        #contact=\"ngModel\"\n                        class=\"form-control\"\n                      />\n                      <div\n                        class=\"text-danger\"\n                        *ngIf=\"contact.touched && contact.invalid\"\n                      >\n                        <small>Please Enter your Phone Number</small>\n                      </div>\n                    </div>\n                  </div>\n\n                  <!--Blood Group-->\n                  <div class=\"row mt-3\">\n                    <label class=\"col-4\" for=\"bg\">Blood Group</label>\n\n                    <div class=\"col-8\">\n                      <select\n                        ngModel\n                        name=\"bg\"\n                        id=\"bloodgroup\"\n                        class=\"form-control\"\n                        #bg=\"ngModel\"\n                        [(ngModel)]=\"selected\"\n                      >\n                        <option *ngFor=\"let bg of options\" [value]=\"bg\">\n                          {{ bg }}\n                        </option>\n                      </select>\n\n                      <div class=\"text-danger\" *ngIf=\"bg.touched && bg.invalid\">\n                        <small>*Please enter a valid Blood Group Type</small>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"text-right\">\n                <button\n                  [disabled]=\"f.invalid\"\n                  type=\"submit\"\n                  class=\"btn btn-primary text-right\"\n                >\n                  Save a Life\n                </button>\n              </div>\n            </form>\n          </div>\n          <div class=\"modal-footer\"></div>\n        </div>\n      </div>\n    </div>\n\n    <!--Show Data in Table Below in the page-->\n    <h1 class=\"mt-5 text-danger text-center\">Profiles of Donors</h1>\n    <table class=\"table table1\">\n      <thead class=\"thead-dark\">\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">City</th>\n        <th scope=\"col\">Blood Group</th>\n        <th scope=\"col\">Contact #</th>\n        <th scope=\"col\">Email</th>\n      </thead>\n      <tr *ngFor=\"let record of currentRecord; let i = index\">\n        <td class=\"text-light\">{{ record.username }}</td>\n        <td class=\"text-light\">{{ record.city }}</td>\n        <td class=\"text-light\">{{ record.bg }}</td>\n        <td>\n          <a\n            class=\"text-light\"\n            href=\"https://api.whatsapp.com/send?{{\n              record.contact\n            }}&text=Hello%2C%20{{ record.name }}!\"\n            >{{ record.contact }}</a\n          >\n        </td>\n        <td>\n          <a class=\"text-light\" href=\"mailto:{{ record.email }}\">{{\n            record.email\n          }}</a>\n        </td>\n      </tr>\n    </table>\n  </div>\n</body>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}